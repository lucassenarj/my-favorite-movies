{"version":3,"file":"static/js/992.8f11410d.chunk.js","mappings":"6JAAO,IAAMA,EAAc,SAACC,GAC1B,IAAIC,EAAS,UACTC,EAAS,GACTC,EAAYH,EAAQI,MAAK,SAACC,GAC5BJ,EAAS,UACTC,EAASG,KACR,SAACC,GACFL,EAAS,QACTC,EAASI,KAGX,MAAO,CACLC,KADK,WAEH,GAAe,YAAXN,EACF,MAAME,EACD,GAAe,UAAXF,EACT,MAAMC,EAGR,OAAOA,M,mCCjBPM,E,MAAWC,GAAAA,OAAa,CAC5BC,QAASC,iCAGX,O,mCCEA,IAJsB,WACpB,OAAOC,EAAAA,EAAAA,IAAA,qCAHOD,uC,mCCMhB,IAJoB,WAClB,OAAOC,EAAAA,EAAAA,IAAA,kCAHOD,uC,2ICAVE,EAAUF,mCAMhB,EAJoB,SAACG,GAAkC,IAAtBC,EAAqB,uDAAN,EAC9C,OAAOH,EAAAA,EAAAA,IAAA,sCAA+CE,EAA/C,iBAA0DC,EAA1D,oBAA0EF,K,uCCG7EG,EAAeC,EAAAA,MAAW,kBAAM,0CAChCC,EAAUD,EAAAA,MAAW,kBAAM,0CAuCjC,MApCA,WACE,OAA0BE,EAAAA,EAAAA,UAAgB,CAAEL,GAAI,GAAIM,KAAM,WAA1D,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BC,EAAAA,EAAAA,MAApBC,KAAAA,OAAN,MAAa,SAAb,GAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUC,EAAAA,EAAAA,MAAgB,gBAAGP,EAAH,EAAGA,KAAH,OAAcQ,EAAAA,EAAAA,GAAoBR,KAAUI,KACxEE,GAASJ,EAASI,KACrB,CAACF,IAEJ,IChBqCV,EAAYC,EDgB3Cc,GChB+Bf,EDgBGO,EAAMP,GChBGC,EDgBC,ECf3C,CACLe,UAAU/B,EAAAA,EAAAA,GAAYgC,EAAYjB,EAAIC,IACtCiB,UAAUjC,EAAAA,EAAAA,IAAYkC,EAAAA,EAAAA,MACtBC,YAAYnC,EAAAA,EAAAA,IAAYoC,EAAAA,EAAAA,QDc1B,OACE,UAAC,EAAAC,SAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,KACA,oBAASC,UAAU,eAAnB,UACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAACvB,EAAD,CAAca,SAAUA,EAAUW,MAAOnB,EAAMD,KAAMqB,YAAY,EAAMC,OAAO,kBAGlF,gBAAKL,UAAU,6BAAf,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,oCAApB,UACE,SAACrB,EAAD,CAASW,SAAUA,gBAM7B,SAAC,KAAD","sources":["api/index.ts","api/tmdb/instance.ts","api/tmdb/movie/getNowPlaying.ts","api/tmdb/movie/getUpcoming.ts","api/tmdb/discover/getCategory.ts","pages/Categories/index.tsx","api/resources/categoryResource.ts"],"sourcesContent":["export const wrapPromise = (promise: Promise<any>) => {\n  let status = \"pending\";\n  let result = \"\";\n  let suspender = promise.then((response: any) => {\n    status = \"success\";\n    result = response;\n  }, (error: any) => {\n    status = \"error\";\n    result = error;\n  });\n\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      }\n\n      return result;\n    }\n  }\n};\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n});\n\nexport default instance;","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getNowPlaying = () => {\n  return apiInstance.get(`/movie/now_playing?api_key=${API_KEY}`);\n}\n\nexport default getNowPlaying;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getUpcoming = () => {\n  return apiInstance.get(`/movie/upcoming?api_key=${API_KEY}`);\n}\n\nexport default getUpcoming;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getCategory = (id: number, page: number = 1) => {\n  return apiInstance.get(`/discover/movie?with_genres=${id}&page=${page}&api_key=${API_KEY}`);\n}\n\nexport default getCategory;","import React, { useEffect, useState, Fragment, Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Breadcrumb, Header, Footer } from \"./../../components\";\nimport genresList from \"../../helpers/genresList\";\nimport generateUrlFriendly from \"../../helpers/generateUrlFriendly\";\nimport { createCategoryResource } from \"../../api/resources/categoryResource\";\nimport Genre from \"../../types/Genre\";\n\nconst CategoryList = React.lazy(() => import(\"./../../components/CategoryList\"));\nconst Sidebar = React.lazy(() => import(\"./../../components/Sidebar\"));\n\n\nfunction Categories() {\n  const [genre, setGenre] = useState<Genre>({ id: 28, name: \"Action\" });\n  let { slug = \"action\" } = useParams();\n\n  useEffect(() => {\n    const founded = genresList.find(({ name }) => generateUrlFriendly(name) === slug);\n    if (founded) setGenre(founded);\n  }, [slug]);\n\n  const resource = createCategoryResource(genre.id, 1);\n  \n  return (\n    <Fragment>\n      <Header />\n      <Breadcrumb />\n      <section className=\"product spad\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-8\">\n              <Suspense fallback={<span>Loading trendings</span>}>\n                <CategoryList resource={resource} title={genre.name} displayAll={true} target=\"category\" />\n              </Suspense>\n            </div>\n            <div className=\"col-lg-4 col-md-6 col-sm-8\">\n              <Suspense fallback={<h1>Loading</h1>}>\n                <Sidebar resource={resource} />\n              </Suspense>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Categories;\n","import getCategory from \"../tmdb/discover/getCategory\";\nimport getNowPlaying from \"../tmdb/movie/getNowPlaying\";\nimport getUpcoming from \"../tmdb/movie/getUpcoming\";\nimport { wrapPromise } from \"./../\";\n\nexport const createCategoryResource = (id: number, page: number) => {\n  return {\n    category: wrapPromise(getCategory(id, page)),\n    upcoming: wrapPromise(getUpcoming()),\n    nowPlaying: wrapPromise(getNowPlaying()),\n  };\n};\n"],"names":["wrapPromise","promise","status","result","suspender","then","response","error","read","instance","axios","baseURL","process","apiInstance","API_KEY","id","page","CategoryList","React","Sidebar","useState","name","genre","setGenre","useParams","slug","useEffect","founded","genresList","generateUrlFriendly","resource","category","getCategory","upcoming","getUpcoming","nowPlaying","getNowPlaying","Fragment","className","Suspense","fallback","title","displayAll","target"],"sourceRoot":""}