{"version":3,"file":"static/js/701.a91ba193.chunk.js","mappings":"6JAAO,IAAMA,EAAc,SAACC,GAC1B,IAAIC,EAAS,UACTC,EAAS,GACTC,EAAYH,EAAQI,MAAK,SAACC,GAC5BJ,EAAS,UACTC,EAASG,KACR,SAACC,GACFL,EAAS,QACTC,EAASI,KAGX,MAAO,CACLC,KADK,WAEH,GAAe,YAAXN,EACF,MAAME,EACD,GAAe,UAAXF,EACT,MAAMC,EAGR,OAAOA,M,mCCjBPM,E,MAAWC,GAAAA,OAAa,CAC5BC,QAASC,iCAGX,O,mGCEA,EAJmB,SAACC,GAClB,OAAOC,EAAAA,EAAAA,IAAA,iBAA0BD,EAA1B,oBAHOD,sCCMhB,EAJ2B,SAACC,GAC1B,OAAOC,EAAAA,EAAAA,IAAA,iBAA0BD,EAA1B,oCAHOD,sCCMhB,EAJmB,SAACC,GAClB,OAAOC,EAAAA,EAAAA,IAAA,iBAA0BD,EAA1B,4BAHOD,sC,4BCGVG,EAAQC,EAAAA,MAAW,kBAAM,0CACzBC,EAAaD,EAAAA,MAAW,kBAAM,0CAC9BE,EAAkBF,EAAAA,MAAW,kBAAM,gCAqCzC,MAlCA,WACE,OAAqBG,EAAAA,EAAAA,MAAfN,GAEAO,ECP6B,SAACP,GACpC,MAAO,CACLQ,SAASrB,EAAAA,EAAAA,GAAYsB,EAAWT,IAChCU,SAASvB,EAAAA,EAAAA,GAAYwB,EAAWX,IAChCY,iBAAiBzB,EAAAA,EAAAA,GAAY0B,EAAmBb,KDGjCc,CAAsBC,cAFvC,MAAW,MAAX,IAIA,OACE,UAAC,WAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,KAEA,oBAASC,UAAU,qBAAnB,UACE,iBAAKA,UAAU,YAAf,WACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,yCAApB,UACE,SAAChB,EAAD,CAAOK,SAAUA,OAEnB,iBAAKS,UAAU,MAAf,WACE,gBAAKA,UAAU,oBAAf,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,yCAApB,UACE,SAACd,EAAD,CAAYG,SAAUA,SAG1B,gBAAKS,UAAU,oBAAf,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,yCAApB,UACE,SAACb,EAAD,CAAiBE,SAAUA,iBAMrC,SAAC,KAAD","sources":["api/index.ts","api/tmdb/instance.ts","api/tmdb/movie/getDetails.ts","api/tmdb/movie/getRecommendations.ts","api/tmdb/movie/getReviews.ts","pages/Details/index.tsx","api/resources/detailsResource.ts"],"sourcesContent":["export const wrapPromise = (promise: Promise<any>) => {\n  let status = \"pending\";\n  let result = \"\";\n  let suspender = promise.then((response: any) => {\n    status = \"success\";\n    result = response;\n  }, (error: any) => {\n    status = \"error\";\n    result = error;\n  });\n\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      }\n\n      return result;\n    }\n  }\n};\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n});\n\nexport default instance;","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getDetails = (id: number) => {\n  return apiInstance.get(`/movie/${id}?api_key=${API_KEY}`);\n}\n\nexport default getDetails;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getRecommendations = (id: number) => {\n  return apiInstance.get(`/movie/${id}/recommendations?api_key=${API_KEY}`);\n}\n\nexport default getRecommendations;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getReviews = (id: number) => {\n  return apiInstance.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n}\n\nexport default getReviews;\n","import React, { Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { createDetailsResource } from \"../../api/resources/detailsResource\";\nimport { Breadcrumb, Footer, Header } from \"./../../components\";\n\nconst Movie = React.lazy(() => import(\"./../../components/Movie\"));\nconst ReviewList = React.lazy(() => import(\"./../../components/ReviewList\"));\nconst Recommendations = React.lazy(() => import(\"./../../components/Recommendations\"));\n\n\nfunction Details() {\n  let { id = \"630\" } = useParams();\n\n  const resource = createDetailsResource(parseInt(id));\n\n  return (\n    <React.Fragment>\n      <Header />\n      <Breadcrumb />\n\n      <section className=\"anime-details spad\">\n        <div className=\"container\">\n          <Suspense fallback={<span>Loading...</span>}>\n            <Movie resource={resource} />\n          </Suspense>\n          <div className=\"row\">\n            <div className=\"col-lg-8 col-md-8\">\n              <Suspense fallback={<span>Loading...</span>}>\n                <ReviewList resource={resource} />\n              </Suspense>\n            </div>\n            <div className=\"col-lg-4 col-md-4\">\n              <Suspense fallback={<span>Loading...</span>}>\n                <Recommendations resource={resource} />\n              </Suspense>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Details;\n","import getDetails from \"../tmdb/movie/getDetails\";\nimport getRecommendations from \"../tmdb/movie/getRecommendations\";\nimport getReviews from \"../tmdb/movie/getReviews\";\nimport { wrapPromise } from \"./../\";\n\n\nexport const createDetailsResource = (id: number) => {\n  return {\n    details: wrapPromise(getDetails(id)),\n    reviews: wrapPromise(getReviews(id)),\n    recommendations: wrapPromise(getRecommendations(id)),\n  }\n}"],"names":["wrapPromise","promise","status","result","suspender","then","response","error","read","instance","axios","baseURL","process","id","apiInstance","Movie","React","ReviewList","Recommendations","useParams","resource","details","getDetails","reviews","getReviews","recommendations","getRecommendations","createDetailsResource","parseInt","className","Suspense","fallback"],"sourceRoot":""}