{"version":3,"file":"static/js/68.616ae98a.chunk.js","mappings":"4JAAO,IAAMA,EAAc,SAACC,GAC1B,IAAIC,EAAS,UACTC,EAAS,GACTC,EAAYH,EAAQI,MAAK,SAACC,GAC5BJ,EAAS,UACTC,EAASG,KACR,SAACC,GACFL,EAAS,QACTC,EAASI,KAGX,MAAO,CACLC,KADK,WAEH,GAAe,YAAXN,EACF,MAAME,EACD,GAAe,UAAXF,EACT,MAAMC,EAGR,OAAOA,M,mCCjBPM,E,MAAWC,GAAAA,OAAa,CAC5BC,QAASC,iCAGX,O,oGCEA,EAJyB,WACvB,OAAOC,EAAAA,EAAAA,IAAA,iDAHOD,sCCMhB,EAJkB,WAChB,OAAOC,EAAAA,EAAAA,IAAA,iCAHOD,sCCMhB,EAJsB,WACpB,OAAOC,EAAAA,EAAAA,IAAA,qCAHOD,sCCMhB,EAJoB,WAClB,OAAOC,EAAAA,EAAAA,IAAA,mCAHOD,sCCMhB,EAJoB,WAClB,OAAOC,EAAAA,EAAAA,IAAA,kCAHOD,sCCMhB,EAJoB,WAClB,OAAOC,EAAAA,EAAAA,IAAA,uCAHOD,sC,SCQVE,EAAeC,EAAAA,MAAW,kBAAM,0CAChCC,EAASD,EAAAA,MAAW,kBAAM,0CAC1BE,EAASF,EAAAA,MAAW,kBAAM,0CAC1BG,EAAOH,EAAAA,MAAW,kBAAM,0CACxBI,EAAUJ,EAAAA,MAAW,kBAAM,0CAE3BK,ECPG,CACLC,QAAQrB,EAAAA,EAAAA,GAAYsB,KACpBC,UAAUvB,EAAAA,EAAAA,GAAYwB,KACtBC,UAAUzB,EAAAA,EAAAA,GAAY0B,KACtBC,eAAe3B,EAAAA,EAAAA,GAAY4B,KAC3BC,UAAU7B,EAAAA,EAAAA,GAAY8B,KACtBC,YAAY/B,EAAAA,EAAAA,GAAYgC,MDmC5B,EAhCuB,WACrB,OACE,UAAC,WAAD,YACE,SAACf,EAAD,KACA,SAACC,EAAD,CAAME,SAAUA,KAChB,oBAASa,UAAU,eAAnB,UACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,MAAf,WACE,iBAAKA,UAAU,WAAf,WACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAACrB,EAAD,CAAcM,SAAUA,EAAUgB,MAAM,WAAWC,OAAO,gBAE5D,SAAC,EAAAH,SAAD,CAAUC,UAAU,gDAApB,UACE,SAACrB,EAAD,CAAcM,SAAUA,EAAUgB,MAAM,YAAYC,OAAO,gBAE7D,SAAC,EAAAH,SAAD,CAAUC,UAAU,gDAApB,UACE,SAACrB,EAAD,CAAcM,SAAUA,EAAUgB,MAAM,gBAAgBC,OAAO,wBAGnE,gBAAKJ,UAAU,6BAAf,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,oCAApB,UACE,SAAChB,EAAD,CAASC,SAAUA,gBAM7B,SAACJ,EAAD","sources":["api/index.ts","api/tmdb/instance.ts","api/tmdb/discover/getDocumentaries.ts","api/tmdb/movie/getLatest.ts","api/tmdb/movie/getNowPlaying.ts","api/tmdb/movie/getTopRated.ts","api/tmdb/movie/getUpcoming.ts","api/tmdb/trending/getTrending.ts","pages/Home/index.tsx","api/resources/homeResource.ts"],"sourcesContent":["export const wrapPromise = (promise: Promise<any>) => {\n  let status = \"pending\";\n  let result = \"\";\n  let suspender = promise.then((response: any) => {\n    status = \"success\";\n    result = response;\n  }, (error: any) => {\n    status = \"error\";\n    result = error;\n  });\n\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      }\n\n      return result;\n    }\n  }\n};\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n});\n\nexport default instance;","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getDocumentaries = () => {\n  return apiInstance.get(`/discover/movie?with_genres=99&api_key=${API_KEY}`);\n}\n\nexport default getDocumentaries;","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getLatest = () => {\n  return apiInstance.get(`/movie/popular?api_key=${API_KEY}`);\n}\n\nexport default getLatest;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getNowPlaying = () => {\n  return apiInstance.get(`/movie/now_playing?api_key=${API_KEY}`);\n}\n\nexport default getNowPlaying;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getTopRated = () => {\n  return apiInstance.get(`/movie/top_rated?api_key=${API_KEY}`);\n}\n\nexport default getTopRated;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getUpcoming = () => {\n  return apiInstance.get(`/movie/upcoming?api_key=${API_KEY}`);\n}\n\nexport default getUpcoming;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getTrending = () => {\n  return apiInstance.get(`/trending/movie/week?api_key=${API_KEY}`);\n}\n\nexport default getTrending;","import React, { Suspense } from \"react\";\nimport { createHomePageResource } from \"./../../api/resources/homeResource\";\n// import {\n//   CategoryList,\n//   Footer,\n//   Header,\n//   Hero,\n//   Sidebar,\n// } from \"./../../components\";\n\nconst CategoryList = React.lazy(() => import(\"./../../components/CategoryList\"));\nconst Footer = React.lazy(() => import(\"./../../components/Footer\"));\nconst Header = React.lazy(() => import(\"./../../components/Header\"));\nconst Hero = React.lazy(() => import(\"./../../components/Hero\"));\nconst Sidebar = React.lazy(() => import(\"./../../components/Sidebar\"));\n\nconst resource = createHomePageResource();\n\nconst Home: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <Hero resource={resource} />\n      <section className=\"product spad\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-8\">\n              <Suspense fallback={<span>Loading trendings</span>}>\n                <CategoryList resource={resource} title=\"Tredings\" target=\"trending\" />\n              </Suspense>\n              <Suspense fallback={<span>Loading top rated</span>}>\n                <CategoryList resource={resource} title=\"Top Rated\" target=\"topRated\" />\n              </Suspense>\n              <Suspense fallback={<span>Loading trendings</span>}>\n                <CategoryList resource={resource} title=\"Documentaries\" target=\"documentaries\" />\n              </Suspense>\n            </div>\n            <div className=\"col-lg-4 col-md-6 col-sm-8\">\n              <Suspense fallback={<h1>Loading</h1>}>\n                <Sidebar resource={resource} />\n              </Suspense>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { wrapPromise } from \"./../\";\nimport getDocumentaries from \"../tmdb/discover/getDocumentaries\";\nimport getLatest from \"../tmdb/movie/getLatest\";\nimport getNowPlaying from \"../tmdb/movie/getNowPlaying\";\nimport getTopRated from \"../tmdb/movie/getTopRated\";\nimport getUpcoming from \"../tmdb/movie/getUpcoming\";\nimport getTrending from \"../tmdb/trending/getTrending\";\n\nexport const createHomePageResource = () => {\n  return {\n    latest: wrapPromise(getLatest()),\n    trending: wrapPromise(getTrending()),\n    topRated: wrapPromise(getTopRated()),\n    documentaries: wrapPromise(getDocumentaries()),\n    upcoming: wrapPromise(getUpcoming()),\n    nowPlaying: wrapPromise(getNowPlaying()),\n  }\n}"],"names":["wrapPromise","promise","status","result","suspender","then","response","error","read","instance","axios","baseURL","process","apiInstance","CategoryList","React","Footer","Header","Hero","Sidebar","resource","latest","getLatest","trending","getTrending","topRated","getTopRated","documentaries","getDocumentaries","upcoming","getUpcoming","nowPlaying","getNowPlaying","className","Suspense","fallback","title","target"],"sourceRoot":""}