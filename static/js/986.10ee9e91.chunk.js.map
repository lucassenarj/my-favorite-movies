{"version":3,"file":"static/js/986.10ee9e91.chunk.js","mappings":"6JAAO,IAAMA,EAAc,SAACC,GAC1B,IAAIC,EAAS,UACTC,EAAS,GACTC,EAAYH,EAAQI,MAAK,SAACC,GAC5BJ,EAAS,UACTC,EAASG,KACR,SAACC,GACFL,EAAS,QACTC,EAASI,KAGX,MAAO,CACLC,KADK,WAEH,GAAe,YAAXN,EACF,MAAME,EACD,GAAe,UAAXF,EACT,MAAMC,EAGR,OAAOA,M,mCCjBPM,E,MAAWC,GAAAA,OAAa,CAC5BC,QAASC,iCAGX,O,mCCEA,IAJsB,WACpB,OAAOC,EAAAA,EAAAA,IAAA,qCAHOD,uC,mCCMhB,IAJoB,WAClB,OAAOC,EAAAA,EAAAA,IAAA,mCAHOD,uC,mCCMhB,IAJoB,WAClB,OAAOC,EAAAA,EAAAA,IAAA,kCAHOD,uC,yICEVE,EAAeC,EAAAA,MAAW,kBAAM,0CAChCC,EAAUD,EAAAA,MAAW,kBAAM,0CA+BjC,MA5BA,WACE,IAAME,ECHC,CACLC,UAAUlB,EAAAA,EAAAA,IAAYmB,EAAAA,EAAAA,MACtBC,UAAUpB,EAAAA,EAAAA,IAAYqB,EAAAA,EAAAA,MACtBC,YAAYtB,EAAAA,EAAAA,IAAYuB,EAAAA,EAAAA,ODE1B,OACE,UAAC,EAAAC,SAAD,YACE,SAAC,KAAD,CAAQC,MAAM,2CACd,SAAC,KAAD,CAAYC,KAAK,eACjB,oBAASC,UAAU,eAAnB,UACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAACf,EAAD,CAAcG,SAAUA,EAAUQ,MAAM,WAAWK,YAAY,EAAMC,OAAO,kBAGhF,gBAAKJ,UAAU,6BAAf,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,oCAApB,UACE,SAACb,EAAD,CAASC,SAAUA,gBAM7B,SAAC,KAAD","sources":["api/index.ts","api/tmdb/instance.ts","api/tmdb/movie/getNowPlaying.ts","api/tmdb/movie/getTopRated.ts","api/tmdb/movie/getUpcoming.ts","pages/TopRated/index.tsx","api/resources/topRatedResource.ts"],"sourcesContent":["export const wrapPromise = (promise: Promise<any>) => {\n  let status = \"pending\";\n  let result = \"\";\n  let suspender = promise.then((response: any) => {\n    status = \"success\";\n    result = response;\n  }, (error: any) => {\n    status = \"error\";\n    result = error;\n  });\n\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      }\n\n      return result;\n    }\n  }\n};\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n});\n\nexport default instance;","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getNowPlaying = () => {\n  return apiInstance.get(`/movie/now_playing?api_key=${API_KEY}`);\n}\n\nexport default getNowPlaying;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getTopRated = () => {\n  return apiInstance.get(`/movie/top_rated?api_key=${API_KEY}`);\n}\n\nexport default getTopRated;\n","import apiInstance from \"./../instance\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getUpcoming = () => {\n  return apiInstance.get(`/movie/upcoming?api_key=${API_KEY}`);\n}\n\nexport default getUpcoming;\n","import React, { Fragment, Suspense } from \"react\";\nimport { createTopRatedResource } from \"../../api/resources/topRatedResource\";\nimport { Breadcrumb, Header, Footer } from \"./../../components\";\n\nconst CategoryList = React.lazy(() => import(\"./../../components/CategoryList\"));\nconst Sidebar = React.lazy(() => import(\"./../../components/Sidebar\"));\n\n\nfunction TopRated() {\n  const resource = createTopRatedResource();\n  \n  return (\n    <Fragment>\n      <Header title=\"Top Rated Movies - My Favorite Movies\" />\n      <Breadcrumb name=\"Top rated\" />\n      <section className=\"product spad\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-8\">\n              <Suspense fallback={<span>Loading trendings</span>}>\n                <CategoryList resource={resource} title=\"Tredings\" displayAll={true} target=\"topRated\" />\n              </Suspense>\n            </div>\n            <div className=\"col-lg-4 col-md-6 col-sm-8\">\n              <Suspense fallback={<h1>Loading</h1>}>\n                <Sidebar resource={resource} />\n              </Suspense>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default TopRated;\n","import getNowPlaying from \"../tmdb/movie/getNowPlaying\";\nimport getTopRated from \"../tmdb/movie/getTopRated\";\nimport getUpcoming from \"../tmdb/movie/getUpcoming\";\nimport { wrapPromise } from \"./../\";\n\nexport const createTopRatedResource = () => {\n  return {\n    topRated: wrapPromise(getTopRated()),\n    upcoming: wrapPromise(getUpcoming()),\n    nowPlaying: wrapPromise(getNowPlaying()),\n  };\n};\n"],"names":["wrapPromise","promise","status","result","suspender","then","response","error","read","instance","axios","baseURL","process","apiInstance","CategoryList","React","Sidebar","resource","topRated","getTopRated","upcoming","getUpcoming","nowPlaying","getNowPlaying","Fragment","title","name","className","Suspense","fallback","displayAll","target"],"sourceRoot":""}